#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Функция УзнатьНеСозданныеЗаПериодДокументы(НачалоПериода, ОкончаниеПериода)
	
		Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка
	|		И РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|ГДЕ
	|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	|	И (ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора >= &КонецПериода
	|	И &НачалоПериода >= ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора)
	|	И РеализацияТоваровУслуг.Дата ЕСТЬ NULL";
		
	
	СсылкаПустая = Документы.РеализацияТоваровУслуг.ПустаяСсылка(); 
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("СсылкаПустая", СсылкаПустая);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;

КонецФункции

Функция УзнатьСозданныеЗаПериодДокументы(НачалоПериода, ОкончаниеПериода)
	
		Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.Дата КАК ДатаРеализации
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка
	|		И РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|ГДЕ
	|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	|	И РеализацияТоваровУслуг.Дата ЕСТЬ НЕ NULL";
		
	
	СсылкаПустая = Документы.РеализацияТоваровУслуг.ПустаяСсылка(); 
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("СсылкаПустая", СсылкаПустая);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;

КонецФункции
	
Функция ВыполнитьДлитедьноеДействие(НачалоПериода, ОкончаниеПериода) Экспорт
	
	Если ТекущаяДатаСеанса() >= ОкончаниеПериода Тогда
		
		ТекущийПериод = НачалоПериода;
		Пока ТекущийПериод <= ОкончаниеПериода Цикл
		    ТекДатаНачала = Макс(НачалоПериода, НачалоМесяца(ТекущийПериод));
		    ТекДатаОкончания = Мин(ОкончаниеПериода, КонецМесяца(ТекущийПериод));
		    ТекущийПериод = ДобавитьМесяц(ТекущийПериод, 1);

			//@skip-check query-in-loop
			РезультатЗапроса = УзнатьНеСозданныеЗаПериодДокументы(ТекДатаНачала, ТекДатаОкончания);
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		
			Счетчик = 1;
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
					
				ДокументРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
				//@skip-check use-non-recommended-method
				//@skip-check use-non-recommended-method
				ДокументРеализация.Дата = ТекДатаОкончания;
				ДокументРеализация.Организация = ВыборкаДетальныеЗаписи.Организация;
				ДокументРеализация.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
				ДокументРеализация.Договор = ВыборкаДетальныеЗаписи.Договор;
				ДокументРеализация.ВКМ_ВыполнитьАвтозаполнение(ВыборкаДетальныеЗаписи.Договор);
				
				Если ДокументРеализация.ПроверитьЗаполнение() Тогда
					// Проводятся только корректно заполненные
				    ДокументРеализация.Записать(РежимЗаписиДокумента.Проведение);    	
				КонецЕсли;
						
				ДлительныеОперации.СообщитьПрогресс(Счетчик / ВыборкаДетальныеЗаписи.Количество() * 100);
				
				Счетчик = Счетчик + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
		РезультатЗапросаДокументов = УзнатьСозданныеЗаПериодДокументы(НачалоПериода, ОкончаниеПериода);
		
		ВсеСозданныеДокументы = РезультатЗапросаДокументов.Выгрузить();	
		
		ВозвращаемоеСообщение = СтрШаблон("Документы 'Реализация товаров и услуг' созданы и проведены за период с %1 по %2",
			Формат(НачалоПериода, "ДЛФ=Д"), Формат(ОкончаниеПериода, "ДЛФ=Д"));
			
		ВозврашаемыйОтвет = Новый Структура;
		ВозврашаемыйОтвет.Вставить("ВозвращаемоеСообщение", ВозвращаемоеСообщение);
		ВозврашаемыйОтвет.Вставить("ВсеСозданныеДокументы", ВсеСозданныеДокументы);
	
	Иначе
		ВозврашаемыйОтвет = Новый Структура;
		ВозвращаемоеСообщение = СтрШаблон("Документы 'Реализация товаров и услуг' не созданы за выбранный период с %1 по %2.
		| Дата окончания периода %2 больше текущей.",
			Формат(НачалоПериода, "ДЛФ=Д"), Формат(ОкончаниеПериода, "ДЛФ=Д"));
		ВозврашаемыйОтвет.Вставить("ВозвращаемоеСообщение", ВозвращаемоеСообщение);
		ВозврашаемыйОтвет.Вставить("ВсеСозданныеДокументы", Неопределено);
	
	КонецЕсли;
	
	Возврат ВозврашаемыйОтвет;

КонецФункции

#КонецОбласти

#КонецЕсли