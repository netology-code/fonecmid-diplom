#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьОсновныеНачисленияОклад(); 
	
	СформироватьДвиженияОтпуск();
	
	СформироватьСторноЗаписи();
	
	РассчитатьОсновныеНачисленияОклад();  
	
	РасчитатьОтпуск();     
	
	РассчитатьДвиженияПрочиеОсновныеНачисления();      
	
	//РасчитатьНДФЛ();
		
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОсновныеНачисленияОклад()  
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокаОклада = Начисления.НайтиСтроки(Отбор);    
	
	Если СтрокаОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачала = НачалоМесяца(Начисления[0].ДатаНачала);
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &ВидРасчетаОклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_Оклад
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|			&ДатаНачала,
		|			Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТ_ТабличнаяЧасть.Сотрудник КАК Сотрудник
		|				ИЗ
		|					ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка,
		|	Пользователи.ВКМ_КатегорияСотрудников КАК ВКМ_КатегорияСотрудников
		|ПОМЕСТИТЬ ВТ_КатегорияСотрудников
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТабличнаяЧасть.Сотрудник КАК Сотрудник,
		|	ВТ_ТабличнаяЧасть.ДатаНачала КАК ДатаНачала,
		|	ВТ_ТабличнаяЧасть.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ТабличнаяЧасть.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТ_Оклад.Оклад КАК Оклад,
		|	ВТ_КатегорияСотрудников.ВКМ_КатегорияСотрудников КАК КатегорияСотрудников,
		|	ВТ_ТабличнаяЧасть.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Оклад КАК ВТ_Оклад
		|		ПО ВТ_ТабличнаяЧасть.Сотрудник = ВТ_Оклад.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КатегорияСотрудников КАК ВТ_КатегорияСотрудников
		|		ПО ВТ_ТабличнаяЧасть.Сотрудник = ВТ_КатегорияСотрудников.Ссылка";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);   
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;		
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Очистить();  
	Движения.ВКМ_ОсновныеНачисления.Очистить();
	Движения.ВКМ_Удержания.Очистить();  
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ТипЗнч(ВыборкаДетальныеЗаписи.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда   
			// регистр ВКМ_ОсновныеНачисления
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();  
			Движение.ПериодРегистрации = Дата;     
			Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;   
		   	Движение.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.ДатаНачала;
			Движение.БазовыйПериодКонец = ВыборкаДетальныеЗаписи.ДатаОкончания;
			Движение.ПериодДействияНачало = ВыборкаДетальныеЗаписи.ДатаНачала;
			Движение.ПериодДействияКонец = ВыборкаДетальныеЗаписи.ДатаОкончания; 
 
			Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;  
			Движение.КатегорияСотрудников = ВыборкаДетальныеЗаписи.КатегорияСотрудников;
			Движение.ГрафикРаботы = ВыборкаДетальныеЗаписи.ГрафикРаботы;   
			
			Если ВыборкаДетальныеЗаписи.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
				Движение.Показатель = ВыборкаДетальныеЗаписи.Оклад; 
			КонецЕсли;
			
			// регистр ВКМ_ВзаиморасчетыССотрудниками Расход
			Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;  
			
		КонецЕсли;	
		
	КонецЦикла;    
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
КонецПроцедуры   

Процедура РассчитатьОсновныеНачисленияОклад()

	// расчет основных начислений   
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.КатегорияСотрудников КАК КатегорияСотрудников
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад
	|	И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДвижениеОклад = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];    
		ДвижениеОклад.ОтработаноДней = ВыборкаДетальныеЗаписи.Факт / 8; 
		ДвижениеОклад.Результат = ДвижениеОклад.Показатель / (ВыборкаДетальныеЗаписи.Норма / 8) * ДвижениеОклад.ОтработаноДней; 
		ДвижениеРасчеты = Движения.ВКМ_ВзаиморасчетыССотрудниками[ВыборкаДетальныеЗаписи.НомерСтроки - 1];      
		ДвижениеРасчеты.Сумма = ДвижениеОклад.Результат; 
		
		// регистр ВКМ_Удержания
		ДвиженияУдержанияНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвиженияУдержанияНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;  
		ДвиженияУдержанияНДФЛ.ПериодРегистрации = Дата;      
		ДвиженияУдержанияНДФЛ.ПериодДействияНачало = НачалоМесяца(Дата);
		ДвиженияУдержанияНДФЛ.ПериодДействияКонец = КонецМесяца(Дата);
		ДвиженияУдержанияНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		ДвиженияУдержанияНДФЛ.КатегорияСотрудников = ВыборкаДетальныеЗаписи.КатегорияСотрудников;
		ДвиженияУдержанияНДФЛ.Результат = Окр(ДвижениеОклад.Результат / 100 * 13);
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками Приход
		ДвижениеНДФЛ = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеНДФЛ.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеНДФЛ.Период = Дата;
		ДвижениеНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;  
		ДвижениеНДФЛ.Сумма = ДвиженияУдержанияНДФЛ.Результат;
		
		Если ДвижениеОклад.Сторно Тогда
			 ДвижениеОклад.Результат = - ДвижениеОклад.Результат;   
			 ДвижениеОклад.ОтработаноДней = - ДвижениеОклад.ОтработаноДней; 
			 ДвиженияУдержанияНДФЛ.Результат = - ДвиженияУдержанияНДФЛ.Результат; 
			 ДвижениеНДФЛ.Сумма = - ДвижениеНДФЛ.Сумма;
        КонецЕсли;    
		 	
	КонецЦикла;   
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина); 
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры  

Процедура СформироватьДвиженияОтпуск()   
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &ВидРасчетаОтпуск
		|	И ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТабличнаяЧасть.Сотрудник КАК Сотрудник,
		|	ВТ_ТабличнаяЧасть.ВидРасчета КАК ВидРасчета,
		|	ВТ_ТабличнаяЧасть.ДатаНачала КАК ДатаНачала,
		|	ВТ_ТабличнаяЧасть.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ТабличнаяЧасть.ГрафикРаботы КАК ГрафикРаботы,
		|	Пользователи.ВКМ_КатегорияСотрудников КАК КатегорияСотрудников
		|ИЗ
		|	ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ВТ_ТабличнаяЧасть.Сотрудник = Пользователи.Ссылка";  
	
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;		
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// регистр ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = ВыборкаДетальныеЗаписи.ДатаНачала; 
		Движение.ПериодДействияКонец = ВыборкаДетальныеЗаписи.ДатаОкончания;
		Движение.КатегорияСотрудников = ВыборкаДетальныеЗаписи.КатегорияСотрудников;	
		Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;    	
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник; 
		Движение.ГрафикРаботы = ВыборкаДетальныеЗаписи.ГрафикРаботы;  
		
		
		Если ВыборкаДетальныеЗаписи.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаНачала, -13));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаОкончания, -1));  
			
		КонецЕсли;    
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками Расход
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата; 
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;  
				
	КонецЦикла;     
	
	Движения.ВКМ_ОсновныеНачисления.Записать();	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры      

Процедура РасчитатьОтпуск()  
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисления.КатегорияСотрудников КАК КатегорияСотрудников
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				ВидРасчета = &ВидРасчетаОтпуск
		|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|				ВидРасчета = &ВидРасчетаОтпуск
		|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпуск
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец,
		|	ВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0),
		|	ВКМ_ОсновныеНачисления.Сотрудник,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0),
		|	ВКМ_ОсновныеНачисления.КатегорияСотрудников";      
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	                                                                              
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);   
	Запрос.УстановитьПараметр("ВидРасчетаПремия", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ФиксированнаяПремия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);   
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();  
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// регистр ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];    
		РазницаВДнях = -(НачалоДня(ВыборкаДетальныеЗаписи.ПериодДействияНачало) - НачалоДня(ВыборкаДетальныеЗаписи.ПериодДействияКонец)) / (60 * 60 * 24) + 1;	
		Движение.ОтработаноДней = РазницаВДнях;     
	
		Если ВыборкаДетальныеЗаписи.ОтработаноДнейБаза = 0 Тогда  
			Движение.СреднийЗаработок = 0;
			Движение.Результат = 0;
			Продолжить;
        КонецЕсли;
        Движение.СреднийЗаработок = ВыборкаДетальныеЗаписи.РезультатБаза / ВыборкаДетальныеЗаписи.ОтработаноДнейБаза;      
		Движение.Результат = РазницаВДнях * Движение.СреднийЗаработок;
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками Расход
		ДвижениеРасчеты = Движения.ВКМ_ВзаиморасчетыССотрудниками[ВыборкаДетальныеЗаписи.НомерСтроки - 1];   
        ДвижениеРасчеты.Сумма = Движение.Результат;
        
        // регистр ВКМ_Удержания
		ДвиженияУдержанияНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвиженияУдержанияНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;  
		ДвиженияУдержанияНДФЛ.ПериодРегистрации = Дата;      
		ДвиженияУдержанияНДФЛ.ПериодДействияНачало = НачалоМесяца(Дата);
		ДвиженияУдержанияНДФЛ.ПериодДействияКонец = КонецМесяца(Дата);
		ДвиженияУдержанияНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		ДвиженияУдержанияНДФЛ.КатегорияСотрудников = ВыборкаДетальныеЗаписи.КатегорияСотрудников;
		ДвиженияУдержанияНДФЛ.Результат = Окр(Движение.Результат / 100 * 13);
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками Приход
		ДвижениеНДФЛ = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеНДФЛ.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеНДФЛ.Период = Дата;
		ДвижениеНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;  
		ДвижениеНДФЛ.Сумма = ДвиженияУдержанияНДФЛ.Результат;

		Если Движение.Сторно Тогда
			 Движение.Результат = - Движение.Результат; 
			 Движение.ОтработаноДней = - Движение.ОтработаноДней;
			 ДвиженияУдержанияНДФЛ.Результат = - ДвиженияУдержанияНДФЛ.Результат;
			 ДвижениеНДФЛ.Сумма = - ДвижениеНДФЛ.Сумма;
		КонецЕсли;
		
	КонецЦикла;
    Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);      
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_Удержания.Записать();
		
КонецПроцедуры   

Процедура РассчитатьДвиженияПрочиеОсновныеНачисления() 
	
	НачалоПериода = НачалоМесяца(Начисления[0].ДатаНачала);
    КонецПериода = КонецМесяца(Начисления[0].ДатаНачала);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &ВидРасчетаЗаРаботы
		|	И ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.ВКМ_КатегорияСотрудников КАК КатегорияСотрудников,
		|	Пользователи.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_КатегорияСотрудников
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеПриход) КАК ЗаВыполненныеРаботы,
		|	ВТ_ТабличнаяЧасть.Сотрудник КАК Сотрудник,
		|	ВТ_ТабличнаяЧасть.ВидРасчета КАК ВидРасчета,
		|	ВТ_ТабличнаяЧасть.ДатаНачала КАК ДатаНачала,
		|	ВТ_ТабличнаяЧасть.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ТабличнаяЧасть.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТ_КатегорияСотрудников.КатегорияСотрудников КАК КатегорияСотрудников,
		|	ВТ_ТабличнаяЧасть.Сотрудник КАК Сотрудник1
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Месяц,
		|			Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТ_ТабличнаяЧасть.Сотрудник КАК Сотрудник
		|				ИЗ
		|					ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты,
		|	ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КатегорияСотрудников КАК ВТ_КатегорияСотрудников
		|		ПО ВТ_ТабличнаяЧасть.Сотрудник = ВТ_КатегорияСотрудников.Ссылка
		|ГДЕ
		|	ВТ_ТабличнаяЧасть.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТабличнаяЧасть.Сотрудник,
		|	ВТ_ТабличнаяЧасть.ВидРасчета,
		|	ВТ_ТабличнаяЧасть.ГрафикРаботы,
		|	ВТ_КатегорияСотрудников.КатегорияСотрудников,
		|	ВТ_ТабличнаяЧасть.ДатаНачала,
		|	ВТ_ТабличнаяЧасть.ДатаОкончания,
		|	ВТ_ТабличнаяЧасть.Сотрудник";      
	
	Запрос.УстановитьПараметр("ВидРасчетаЗаРаботы", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ЗаРаботы);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);  
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);    
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();  
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
		
		Если ВыборкаДетальныеЗаписи.КатегорияСотрудников = Перечисления.ВКМ_КатегорииСотрудников.ВКМ_АдминистративныйПерсонал Тогда
			Продолжить;
		КонецЕсли;
		// регистр ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = ВыборкаДетальныеЗаписи.ДатаНачала; 
		Движение.ПериодДействияКонец = ВыборкаДетальныеЗаписи.ДатаОкончания;  
		Движение.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.ДатаНачала;
		Движение.БазовыйПериодКонец = ВыборкаДетальныеЗаписи.ДатаОкончания;
		Движение.КатегорияСотрудников = ВыборкаДетальныеЗаписи.КатегорияСотрудников;	
		Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;    	
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник; 
		Движение.ГрафикРаботы = ВыборкаДетальныеЗаписи.ГрафикРаботы; 
		Движение.Результат = ВыборкаДетальныеЗаписи.ЗаВыполненныеРаботы;
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками Расход
		ДвижениеРасчеты = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеРасчеты.ВидДвижения = ВидДвиженияНакопления.Расход;
		ДвижениеРасчеты.Период = Дата; 
		ДвижениеРасчеты.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник; 
		ДвижениеРасчеты.Сумма = ВыборкаДетальныеЗаписи.ЗаВыполненныеРаботы; 
		
		// регистр ВКМ_Удержания
		ДвиженияУдержанияНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвиженияУдержанияНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;  
		ДвиженияУдержанияНДФЛ.ПериодРегистрации = Дата;      
		ДвиженияУдержанияНДФЛ.ПериодДействияНачало = НачалоМесяца(Дата);
		ДвиженияУдержанияНДФЛ.ПериодДействияКонец = КонецМесяца(Дата);
		ДвиженияУдержанияНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		ДвиженияУдержанияНДФЛ.КатегорияСотрудников = ВыборкаДетальныеЗаписи.КатегорияСотрудников;
		ДвиженияУдержанияНДФЛ.Результат = Окр(ВыборкаДетальныеЗаписи.ЗаВыполненныеРаботы / 100 * 13);
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками Приход
		ДвижениеНДФЛ = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеНДФЛ.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеНДФЛ.Период = Дата;
		ДвижениеНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;  
		ДвижениеНДФЛ.Сумма = ДвиженияУдержанияНДФЛ.Результат;

		Если Движение.Сторно Тогда
			 Движение.Результат = - Движение.Результат; 
			 ДвижениеРасчеты.Сумма = - ДвижениеРасчеты.Сумма;
			 ДвиженияУдержанияНДФЛ.Результат = - ДвиженияУдержанияНДФЛ.Результат;
			 ДвижениеНДФЛ.Сумма = - ДвижениеНДФЛ.Сумма;
		КонецЕсли;		
	КонецЦикла;   
	
	Движения.ВКМ_ОсновныеНачисления.Записать();      
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры     

Процедура СформироватьСторноЗаписи()  
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
	
	Для Каждого Строка Из СторноЗаписи Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить(); 
		ЗаполнитьЗначенияСвойств(Движение, Строка);     
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Строка.ПериодДействияКонецСторно;
		Движение.Сторно = Истина;  
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.Период = Дата;
		//@skip-check bsl-legacy-check-static-feature-access-for-unknown-left-part
		Движение.Сторно = Истина;	
		Движение = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.ПериодДействияНачало = Строка.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Строка.ПериодДействияКонецСторно;
		//@skip-check bsl-legacy-check-static-feature-access-for-unknown-left-part
		Движение.Сторно = Истина;	
	КонецЦикла; 
	
	Движения.ВКМ_ОсновныеНачисления.Записать();   
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать(); 
	Движения.ВКМ_Удержания.Записать();
		
КонецПроцедуры  

#КонецОбласти

#КонецЕсли

