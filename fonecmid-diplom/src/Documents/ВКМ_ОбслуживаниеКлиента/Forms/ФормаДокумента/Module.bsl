#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПроверкаНаличияИзменений();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПроверкаНаличияИзменений()
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПлан,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРаботПлан,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.КлиентКонтрагент.Представление КАК КлиентПредставление
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 

		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка); 

		Результат = Запрос.Выполнить(); 
		Выборка = Результат.Выбрать(); 
		Если Выборка.Следующий() Тогда 
			ВыборкаКлиентПредставление = Выборка.КлиентПредставление;
			ВыборкаДатаПроведенияРабот = Выборка.ДатаПроведенияРабот; 
			ВыборкаВремяНачалаРаботПлан = Выборка.ВремяНачалаРаботПлан;
			ВыборкаВремяОкончанияРаботПлан = Выборка.ВремяОкончанияРаботПлан;
			ВыборкаСпециалист = Выборка.Специалист;

		КонецЕсли; 		
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщенияВГруппу = Справочники.ВКМ_УведомленияТелеграмБотуДляОтправки.СоздатьЭлемент();
		ТекстСообщенияВГруппу.ТекстСообщения = СтрШаблон("Пришла заявка от клиента %1, 
		|Дата проведения работ: %2,
		|Время начала работ %3,
		|Время окончания работ %4,
		|Требуется специалист: %5", 
		Объект.КлиентКонтрагент, Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy"), 
		Формат(Объект.ВремяНачалаРаботПлан, "ДФ=Ч:мм"),
		Формат(Объект.ВремяОкончанияРаботПлан, "ДФ=Ч:мм"),
		Объект.Специалист);
		ТекстСообщенияВГруппу.Записать();
	ИначеЕсли ВыборкаДатаПроведенияРабот <> Объект.ДатаПроведенияРабот  
			Или ВыборкаВремяНачалаРаботПлан <> Объект.ВремяНачалаРаботПлан
			Или ВыборкаВремяОкончанияРаботПлан <> Объект.ВремяОкончанияРаботПлан
			Или ВыборкаСпециалист <> Объект.Специалист Тогда
		Если ВыборкаДатаПроведенияРабот <> Объект.ДатаПроведенияРабот Тогда
			Изменение = СтрШаблон("Изменилась дата с %1 на %2.", 
				Формат(ВыборкаДатаПроведенияРабот, "ДФ=dd.MM.yyyy"), Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy"));
		КонецЕсли;
		Если ВыборкаВремяНачалаРаботПлан <> Объект.ВремяНачалаРаботПлан Тогда
			Изменение = СтрШаблон("Изменилось время начала работ с %1 на %2.",
				Формат(ВыборкаВремяНачалаРаботПлан, "ДФ=Ч:мм"), Формат(Объект.ВремяНачалаРаботПлан, "ДФ=Ч:мм"));
		КонецЕсли;
		Если ВыборкаВремяОкончанияРаботПлан <> Объект.ВремяОкончанияРаботПлан Тогда
			Изменение = СтрШаблон("Изменилось время окончания работ с %1 на %2.",
				Формат(ВыборкаВремяОкончанияРаботПлан, "ДФ=Ч:мм"), Формат(Объект.ВремяОкончанияРаботПлан, "ДФ=Ч:мм"));
		КонецЕсли;
		Если ВыборкаСпециалист <> Объект.Специалист Тогда
			Изменение = СтрШаблон("Изменился выбор специалиста. Требуется: %2.",
				ВыборкаСпециалист, Объект.Специалист);
		КонецЕсли;
		
		ТекстСообщенияВГруппу = Справочники.ВКМ_УведомленияТелеграмБотуДляОтправки.СоздатьЭлемент();
		ТекстСообщенияВГруппу.ТекстСообщения = СтрШаблон("В заявке от клиента %1 произошли изменения:
		|%6
		|Новые данные:
		|Дата проведения работ: %2,
		|Время начала работ %3,
		|Время окончания работ %4,
		|Требуется специалист: %5", 
		ВыборкаКлиентПредставление, Формат(ВыборкаДатаПроведенияРабот, "ДФ=dd.MM.yyyy"),
		Формат(ВыборкаВремяНачалаРаботПлан, "ДФ=Ч:мм"),
		Формат(ВыборкаВремяОкончанияРаботПлан, "ДФ=Ч:мм"),
		ВыборкаСпециалист, Изменение);
		ТекстСообщенияВГруппу.Записать();	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
