#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Дата КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора КАК ВидДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ДатаНачалаДействияДоговора КАК НачалоДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ДатаОкончанияДействияДоговора КАК КонецДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЗаЧас,
		|	ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы.(
		|		ЧасыКОплатеКлиенту) КАК ЧасыДляОплаты
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	НулеваяДата = Дата(01,01,0001,0,0,0);
			
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
	НачалоДоговора = НачалоДня(ВыборкаДетальныеЗаписи.НачалоДоговора);
	ДеньПроведенияРабот = НачалоДня(ВыборкаДетальныеЗаписи.ДатаПроведенияРабот);
	ОкончаниеДоговора = КонецДня(ВыборкаДетальныеЗаписи.КонецДоговора);
	
	ВремяНачалаДоговора = НачалоДоговора - НулеваяДата; 
	ВремяПроведенияРабот = ДеньПроведенияРабот - НулеваяДата;
	ВремяОкончанияДоговора = ОкончаниеДоговора - НулеваяДата;
		Если ВыборкаДетальныеЗаписи.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание 
			И ВремяНачалаДоговора <= ВремяПроведенияРабот
			И ВремяПроведенияРабот <= ВремяОкончанияДоговора Тогда		
			Выборка = ВыборкаДетальныеЗаписи.ЧасыДляОплаты.Выбрать();
			СтоимостьЗаЧас = ВыборкаДетальныеЗаписи.СтоимостьЗаЧас;
			Пока Выборка.Следующий() Цикл
				Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
				Движение.Период = Дата;
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.КлиентКонтрагент = КлиентКонтрагент;
				Движение.Договор = Договор;	
				Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
				Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * СтоимостьЗаЧас;		
			КонецЦикла;
			
		Иначе 
			
			Отказ = Истина;
			Если ВыборкаДетальныеЗаписи.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон("Выбран вид договора не являющийся абонентским обслуживанием: %1.", ВыборкаДетальныеЗаписи.ВидДоговора);
				Сообщение.Сообщить();
			
			ИначеЕсли (ВремяПроведенияРабот <= ВремяНачалаДоговора ИЛИ
					ВремяОкончанияДоговора <= ВремяПроведенияРабот) Тогда
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон("Дата проведения работ %1 не входит в период действия выбранного договора с %2 по %3.", 
				Формат(ВыборкаДетальныеЗаписи.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy"),
				Формат(ВыборкаДетальныеЗаписи.НачалоДоговора, "ДФ=dd.MM.yyyy"), 
				Формат(ВыборкаДетальныеЗаписи.КонецДоговора, "ДФ=dd.MM.yyyy"));
				Сообщение.Сообщить();
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

#КонецОбласти

#КонецЕсли
