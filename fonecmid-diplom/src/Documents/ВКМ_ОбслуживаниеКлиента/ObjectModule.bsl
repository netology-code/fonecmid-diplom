#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий	
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
     Возврат;
	КонецЕсли;
	
	ТескстДляУведомленияТГБота = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРаботСтароеЗначение,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПланСтароеЗначение,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРаботПланСтароеЗначение,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК СпециалистСтароеЗначение
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ДатаПроведенияРабот <> ВыборкаДетальныеЗаписи.ДатаПроведенияРаботСтароеЗначение Тогда
			
			ДатаПроведенияРаботТекст =  Формат(ДатаПроведенияРабот, "ДЛФ=Д");
			
			ТескстДляУведомленияТГБота = ТескстДляУведомленияТГБота + " Дата проведенияРабот: " + ДатаПроведенияРаботТекст;
			
		КонецЕсли;
		
		Если ВремяНачалаРаботПлан <> ВыборкаДетальныеЗаписи.ВремяНачалаРаботПланСтароеЗначение Тогда
			
			ВремяНачалаРаботПланТекст =  Формат(ВремяНачалаРаботПлан, "ДФ=Ч");
			
			ТескстДляУведомленияТГБота = ТескстДляУведомленияТГБота + " Время начала: " + ВремяНачалаРаботПланТекст;
			
		КонецЕсли;
		
		Если ВремяОкончанияРаботПлан <> ВыборкаДетальныеЗаписи.ВремяОкончанияРаботПланСтароеЗначение Тогда
			
			ВремяОкончанияРаботПланТекст =  Формат(ВремяОкончанияРаботПлан, "ДФ=Ч");
			
			ТескстДляУведомленияТГБота = ТескстДляУведомленияТГБота + " Дата окончания: " + ВремяОкончанияРаботПланТекст;
			
		КонецЕсли;
		
		Если Специалист <> ВыборкаДетальныеЗаписи.СпециалистСтароеЗначение Тогда
			
			СпециалистТекст =  XMLСтрока(Специалист);
			
			ТескстДляУведомленияТГБота = ТескстДляУведомленияТГБота + " Специалист: " + СпециалистТекст;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
	НовЭлемент = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
	НовЭлемент.ТекстСообщения = ТескстДляУведомленияТГБота;
	НовЭлемент.Записать();
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_НачалоДействия КАК НачалоДействияДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_КонецДействия КАК КонецДействияДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора КАК ВидДоговора
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание
	И Выборка.НачалоДействияДоговора < Дата И Дата < Выборка.КонецДействияДоговора Тогда
		
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Договор  = Договор;
		Движение.Клиент = Клиент;
		Движение.КоличествоЧасов = Час(ВремяОкончанияРаботПлан) - Час(ВремяНачалаРаботПлан);
		Движение.СуммаКОплате = Движение.КоличествоЧасов * Выборка.СтоимостьЧасаРаботы;
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
		
		 
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот,
			|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
			|ИЗ
			|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата,) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|		ПО (ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = ВКМ_ОбслуживаниеКлиента.Специалист)
			|ГДЕ
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = &Сотрудник
			|	И ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;  
		ОбщегоНазначения.СообщитьПользователю("Не указан процент"); 
		Возврат; 
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина; 
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить(); 
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход; 
	Движение.Период = Дата; 
	Движение.Сотрудник = Специалист; 
	Движение.ЧасовКОплате = ВыполненыеРаботы.Итог("ЧасыКОплатеКлиенту");   
	
	ЧасовКОплатеКлиенту = ВыполненыеРаботы.Итог("ЧасыКОплатеКлиенту");   
	СтавкаЧасаКлиента =ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы; 
	ПроцентОтРабот = ВыборкаДетальныеЗаписи.ПроцентОтРабот; 
    
    Движение.СуммаКОплате = ЧасовКОплатеКлиенту * СтавкаЧасаКлиента * ПроцентОтРабот / 100; 
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли



